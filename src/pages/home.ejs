<!DOCTYPE html>
<html class="h-full bg-white" lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>URLs Page</title>
    <link href="/stylesheets/main.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
</head>
<body class="h-full">
    <header>
        <%- include('./partials/header'); %>
    </header>
    <div class="flex min-h-full flex-col justify-start px-6 py-12 lg:px-8">
        <div class="flex flex-col justify-center gap-4">
            <h2 class="text-base text-center font-semibold leading-7 text-gray-900">Create a Short URL</h2>
            <form id="new-url-form" action="/api/urls" method="POST" class="mt-4 w-full">
                <div class="flex gap-2 flex-col justify-center lg:flex-row">
                    <input type="url" name="redirectUrl" id="url" required placeholder="Your long URL" class="w-full lg:w-80 px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-600 focus:border-transparent">
                    <input type="text" name="name" id="alias" required placeholder="Alias name" class="w-full lg:w-56 px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-600 focus:border-transparent">
                    <div class="flex flex-col sm:flex-row gap-2">
                        <button type="submit" class="w-full lg:w-24 px-4 py-2 bg-indigo-600 text-white font-semibold rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-600 focus:border-transparent hover:bg-indigo-700">
                            Create
                        </button>
                        <button type="button" onclick="customizeUrl()" class="w-full lg:w-28 px-4 py-2 border border-indigo-600 text-indigo-600 font-semibold rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-600 focus:border-transparent hover:text-white hover:border hover:border-indigo-700 hover:bg-indigo-700">
                            Customize
                        </button>
                    </div>
                    
                </div>
            </form>
        </div>
        

        <div class="mt-20 flex flex-col justify-start gap-4">
            <h2 class="text-base text-center font-semibold leading-7 text-gray-900">My Short URLs</h2>
            <div id="urls_list" class="mt-4 grid xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-4">
                <% for (const url of urls) {%>
                    <div class="flex flex-col justify-between gap-3 bg-white shadow-md shadow-indigo-200 hover:shadow-indigo-300 hover:shadow-lg rounded-lg p-4">
                        <div class="flex flex-col gap-0.5">
                            <div class="flex justify-between">
                                <div class="flex justify-center w-20 bg-gray-500 rounded-md px-1 py-0.5 mb-2">
                                    <span class="text-white font-semibold text-xs">
                                        <%= url.typeParsed.toLowerCase() %>
                                    </span>
                                </div>
                                <% if(url.active) {%>
                                    <label class="inline-flex items-center cursor-pointer">
                                        <input id="enabledCheckbox" type="checkbox" onchange="enableUrl('<%= url.id %>', this.checked)" <%= url.enabled ? "checked" : "" %> class="sr-only peer">
                                        <div class="relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                                    </label>
                                <% } %>
                            </div>
                        
                            <p class="break-all text-gray-500">
                                <%= url.name %>
                            </p>
                            <a href="<%= url.shortUrl %>" class="break-all text-indigo-600 font-semibold mb-2" target="_blank" title="Open in new tab">
                                <%= url.shortUrl %>
                            </a>
                        </div>
    
                        <div class="flex justify-between">
                            <div class="flex gap-4 divide-x-2 divide-gray-300">
                                <div class="flex gap-2">
                                    <span class="material-icons text-gray-300">
                                        visibility
                                    </span>
                                    <span class="text-gray-500">
                                        <%= url.visits %>
                                    </span>
                                </div>
                                <div class="pl-4">
                                    <% if(url.active) {%>
                                        <span class="text-gray-300 italic">
                                            active<%= (function() {    
                                                if(url.type === 'T') {
                                                    const options = { year: 'numeric', month: 'short', day: 'numeric' };
                                                    const dateFormatted =  new Date(url.expirationDate).toLocaleDateString('en-US', options);
                                                    return ` till ${dateFormatted}`;
                                                }
                                                
                                            })()  %>
                                        </span>
                                    <% } else {%>
                                        <span class="text-gray-300 italic">
                                            expired
                                        </span>
                                    <% }%>
                                </div>
                            </div>
                            
                            <div class="flex justify-end gap-2">
                                <button onclick="editUrl('<%= url.id %>')" class="material-icons text-gray-300 hover:text-indigo-600 cursor-pointer">
                                    edit
                                </button>
                                <button onclick="copyUrl('<%= url.shortUrl %>')" class="material-icons text-gray-300 hover:text-indigo-600 cursor-pointer">
                                    content_copy
                                </button>
                                <button onclick="deleteUrl('<%= url.id %>')" class="material-icons text-gray-300 hover:text-red-600 cursor-pointer">
                                    delete
                                </button> 
                            </div>
                        </div>
                    </div>
                 <% }%>
            </div>
        </div>
    </div>
    

   
    <script >
        async function customizeUrl() {
            const url = document.getElementById('url').value;
            const alias = document.getElementById('alias').value;

            window.sessionStorage.setItem('url', url);
            window.sessionStorage.setItem('alias', alias);

            window.location = '/url/customize';
        }

        async function copyUrl(shortUrl) {
            try {
                await navigator.clipboard.writeText(shortUrl);
            } catch (err) {
                console.error('Failed to copy: ', err);
            }
        }

        async function deleteUrl(urlId) {
            const response = await fetch(`/api/urls/${urlId}`, {
                method: 'DELETE',
            });

            if (!response.ok) {
                alert('Failed to delete URL');
            }
        }

        async function enableUrl(urlId, enabled) {
            const response = await fetch(`/api/urls/${urlId}`, {
                method: 'PUT',
                headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
                },
                body: JSON.stringify({ enabled }),
            });

            if (!response.ok) {
                const checkbox = document.getElementById('enabledCheckbox');
                checkbox.checked = !enabled;
                alert('Failed to enable URL');
            }
        }

        async function editUrl(urlId) {
            window.location = `/url/edit/${urlId}`;
        }

        const form = document.getElementById('new-url-form');
        
        form.addEventListener('submit', async (event) => {
            event.preventDefault();

            const url = document.getElementById('url').value;
            const alias = document.getElementById('alias').value;

            const response = await fetch('/api/urls', {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ 
                    redirectUrl: url, 
                    name: alias 
                }),
            });

            if (response.ok) {
                window.location.reload();
            } else {
                const data = await response.json();
                alert(data.message);
            }
        });
    </script>
</body>
</html>